@model CadastroDinamico.Core.TabelaCore

@section Stylesheets {
    <link rel="stylesheet" type="text/css" href="~/lib/datatables/datatables.min.css" />
    <style>
        h2 {
            font-size: 25px;
        }

        .m-botom {
            margin-bottom: 10px;
        }
    </style>
}

<div class="row">
    <div class="col-md-6 col-sm-6 col-lg-6 col-6">
        <a role="button" class="btn btn-outline-secondary m-botom" href="/Configuracao/Index"><i class="fas fa-hand-point-left"></i></a>
        @{ string parametrosNovo = string.Format("/CadDinamico/Novo?database={0}&schema={1}&tabela={2}", Model.Database, Model.Schema, Model.Nome); }
        <a role="button" class="btn btn-outline-primary m-botom" href="@parametrosNovo" title="Novo">
            <i class="fas fa-plus"></i>
        </a>
    </div>
    <div class="col-md-6 col-sm-6 col-lg-6 col-6">
        <div class="text-right">
            @{ string parametrosDownload = string.Format("/CadDinamico/DownloadHtmlIndex?database={0}&schema={1}&tabela={2}", Model.Database, Model.Schema, Model.Nome); }
            <a role="button" class="btn btn-outline-secondary m-botom" href="@parametrosDownload" title="Download Html">
                <i class="fa fa-download" aria-hidden="true"></i>
            </a>
        </div>
    </div>
    <br />
    <div class="col-md-12">
        <h2>@ViewBag.Title</h2>
    </div>
</div>

<form method="post" action="/CadDinamico/Filtrar/" class="form-space-bottom">
    @Html.Hidden("Database", Model.Database, new { @class = "form-control" })
    @Html.Hidden("Schema", Model.Schema, new { @class = "form-control" })
    @Html.Hidden("Tabela", Model.Nome, new { @class = "form-control" })

    @if (Model.ColunasFiltro.Count > 0)
    {
        var cont = 0;

        @while (cont < Model.ColunasFiltro.Count)
        {
            <div class="row">

                @for (int col = 0; col < 3; col++)
                {
                    if (cont >= Model.ColunasFiltro.Count)
                    {
                        break;
                    }

                    var nome = Model.ColunasFiltro[cont].NomeInput;

                    <div class="col-md-4">

                        @if (Model.ColunasFiltro[cont].IsChaveEstrangeira)
                        {
                            <div class="form-group">
                                <label for="@nome">@Model.ColunasFiltro[cont].Nome</label>
                                <select name="@nome" id="@nome" class="form-control">
                                    <option value="0">-- SELECIONE --</option>
                                    @for (int cont2 = 0; cont2 < Model.ColunasFiltro[cont].ListaSelecao.Count; cont2++)
                                    {
                                        <option value="@Model.ColunasFiltro[cont].ListaSelecao[cont2].ChavePrimaria">@Model.ColunasFiltro[cont].ListaSelecao[cont2].Descricao</option>
                                    }
                                </select>
                            </div>
                        }
                        else if (Model.ColunasFiltro[cont].Tipo.ToUpper() == "INT" ||
                                    Model.ColunasFiltro[cont].Tipo.ToUpper() == "BIGINT" ||
                                    Model.ColunasFiltro[cont].Tipo.ToUpper() == "SMALLINT" ||
                                    Model.ColunasFiltro[cont].Tipo.ToUpper() == "TINYINT")
                        {
                            <div class="form-group">
                                <label for="@nome">@Model.ColunasFiltro[cont].Nome</label>
                                <input type="number" class="form-control" id="@nome" name="@nome" />
                            </div>
                        }
                        else if (Model.ColunasFiltro[cont].Tipo.ToUpper() == "DECIMAL" ||
                                    Model.ColunasFiltro[cont].Tipo.ToUpper() == "FLOAT")
                        {
                            <div class="form-group">
                                <label for="@nome">@Model.ColunasFiltro[cont].Nome</label>
                                <input type="number" class="form-control" id="@nome" step=".01" name="@nome" />
                            </div>
                        }
                        else if (Model.ColunasFiltro[cont].Tipo.ToUpper() == "DATETIME")
                        {
                            <div class="form-group">
                                <label for="@nome">@Model.ColunasFiltro[cont].Nome</label>
                                <input type="datetime" class="form-control inputData" id="@nome" name="@nome" />
                            </div>
                        }
                        else if (Model.ColunasFiltro[cont].Tipo.ToUpper() == "DATE")
                        {
                            <div class="form-group">
                                <label for="@nome">@Model.ColunasFiltro[cont].Nome</label>
                                <input type="date" class="form-control" id="@nome" name="@nome" />
                            </div>
                        }
                        else if (Model.ColunasFiltro[cont].Tipo.ToUpper() == "TIME")
                        {
                            <div class="form-group">
                                <label for="@nome">@Model.ColunasFiltro[cont].Nome</label>
                                <input type="time" class="form-control" id="@nome" name="@nome" />
                            </div>
                        }
                        else if (Model.ColunasFiltro[cont].Tipo.ToUpper() == "BIT")
                        {
                            <div class="form-group">
                                <div class="checkbox" style="margin-bottom: 15px;">
                                    <input type="checkbox" id="@nome" name="@nome">
                                    <label for="@nome">@Model.ColunasFiltro[cont].Nome</label>
                                </div>
                            </div>
                        }
                        else if (Model.ColunasFiltro[cont].Tipo.ToUpper() == "VARCHAR" ||
                            Model.ColunasFiltro[cont].Tipo.ToUpper() == "NVARCHAR" ||
                            Model.ColunasFiltro[cont].Tipo.ToUpper() == "CHAR" ||
                            Model.ColunasFiltro[cont].Tipo.ToUpper() == "NCHAR")
                        {
                            <div class="form-group">
                                <label for="@nome">@Model.ColunasFiltro[cont].Nome</label>
                                <input type="text" class="form-control" id="@nome" name="@nome" value="">
                            </div>
                        }
                    </div>

                    cont++;
                }

            </div>
        }
        <button type="submit" class="btn btn-primary m-botom" title="Salvar"><i class="fas fa-search"></i></button>
    }
</form>
<hr />
<div class="row">
    <div class="col-md-12">
        <div class="table-responsive">
            <table id="tableDadosFiltro" class="table table-striped table-sm datatable">
                <thead>
                    <tr>
                        @for (int coluna = 0; coluna < Model.Colunas.Count; coluna++)
                        {
                            <th>
                                @Model.Colunas[coluna].Nome
                            </th>
                        }
                        <th>
                            Ações
                        </th>
                    </tr>
                </thead>
                <tbody>

                </tbody>
            </table>
        </div>
    </div>
</div>

<hr />

@section Scripts {
    <script type="text/javascript" src="~/bundles/js/useDatatable.min.js"></script>
    <script type="text/javascript" src="~/bundles/js/cadDinamicoIndex.min.js"></script>
}